name: CI - React TS + Tests + Email

on:
  push:
    branches: [ master, dev ]   # Se ejecuta en push a estas ramas
  pull_request:
    branches: [ master ]   # Se ejecuta en PR cuyo destino sea estas ramas

permissions:
  contents: read

jobs:
  unit:
    name: Unit tests (Vitest)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Run unit tests (Vitest) with coverage
        run: npx vitest --run --coverage

      - name: Upload unit coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-unit
          path: coverage/
          if-no-files-found: ignore

  e2e:
    name: E2E tests (Playwright)
    runs-on: ubuntu-latest
    needs: unit
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build app
        run: npm run build

      - name: Start app (preview) in background
        run: |
          npx vite preview --port 5173 --strictPort &
          echo $! > preview.pid
          sleep 3

      - name: Run E2E (Playwright) and produce HTML/JUnit
        env:
          BASE_URL: http://localhost:5173
        run: npx playwright test --reporter=html,junit

      - name: Stop preview
        if: always()
        run: |
          if [ -f preview.pid ]; then kill "$(cat preview.pid)" || true; fi

      - name: Upload E2E HTML report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          if-no-files-found: ignore

      - name: Upload E2E JUnit (XML)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-junit
          path: test-results/**/*.xml
          if-no-files-found: ignore

  # Notificación por correo en cualquier resultado (puedes cambiar a "if: failure()" si solo quieres en fallos)
  notify:
    name: Notify (Email)
    runs-on: ubuntu-latest
    needs: [unit, e2e]
    if: always()
    steps:
      - name: Send email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          secure: ${{ secrets.SMTP_PORT == '465' }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          from: ${{ secrets.EMAIL_FROM }}
          to: ${{ secrets.EMAIL_TO }}
          subject: >-
            ${{ (needs.unit.result == 'success' && needs.e2e.result == 'success')
                && '✅ CI OK' || '❌ CI con fallos' }}
            - ${{ github.repository }} [${{ github.ref_name }}]
          body: |
            Resultado CI

            • Unit: ${{ needs.unit.result }}
            • E2E:  ${{ needs.e2e.result }}

            Repo:   ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}

            Ver ejecución:
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          html_body: |
            <p><strong>${{ (needs.unit.result == 'success' && needs.e2e.result == 'success')
              && '✅ CI OK' || '❌ CI con fallos' }}</strong></p>
            <ul>
              <li><strong>Unit:</strong> ${{ needs.unit.result }}</li>
              <li><strong>E2E:</strong>  ${{ needs.e2e.result }}</li>
            </ul>
            <p>
              <strong>Repo:</strong> ${{ github.repository }}<br/>
              <strong>Branch:</strong> ${{ github.ref_name }}<br/>
              <strong>Commit:</strong> ${{ github.sha }}
            </p>
            <p>
              <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">Ver ejecución y artefactos</a>
            </p>
          priority: high
